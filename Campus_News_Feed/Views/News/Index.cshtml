@model NewsListViewModel
@{
    ViewData["Title"] = !string.IsNullOrEmpty(Model.CategoryName) ? Model.CategoryName : "所有新闻";
}

<div class="mb-4">
    <h2>@ViewData["Title"]</h2>
</div>

@if (!string.IsNullOrEmpty(Model.CategoryName))
    {
        <p class="text-muted">分类: @Model.CategoryName</p>
    }

<!-- 搜索和筛选区域 -->
<div class="card mb-4">
    <div class="card-header d-flex align-items-center justify-content-between">
        <div>
            <i class="bi bi-search"></i> 搜索与筛选
        </div>
        <button class="btn btn-sm btn-link" type="button" data-bs-toggle="collapse" data-bs-target="#searchCollapse" aria-expanded="false">
            <i class="bi bi-arrows-expand"></i>
        </button>
    </div>
    <div class="collapse" id="searchCollapse">
        <div class="card-body">
            <form method="get" action="@Url.Action(Model.CategoryId > 0 ? "ByCategory" : "Index", "News")" class="row g-3">
                @if (Model.CategoryId > 0)
                {
                    <input type="hidden" name="categoryId" value="@Model.CategoryId" />
                }
                
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="searchTerm">关键词搜索</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                                   placeholder="搜索标题或内容..." value="@Model.SearchTerm">
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-search"></i> 搜索
                            </button>
                        </div>
                    </div>
                </div>
                
                @if (Model.CategoryId == 0)
                {
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="categoryId">分类筛选</label>
                            <select class="form-select" id="categoryId" name="categoryId">
                                <option value="">-- 所有分类 --</option>
                                @foreach (var category in ViewBag.Categories)
                                {
                                    if (Model.FilterCategoryId == category.Id)
                                    {
                                        <option value="@category.Id" selected>@category.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                }
                
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="dateFrom">开始日期</label>
                        <input type="date" class="form-control" id="dateFrom" name="dateFrom" 
                               value="@(Model.DateFrom?.ToString("yyyy-MM-dd"))" onchange="validateDates()">
                    </div>
                </div>
                
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="dateTo">结束日期</label>
                        <input type="date" class="form-control" id="dateTo" name="dateTo" 
                               value="@(Model.DateTo?.ToString("yyyy-MM-dd"))" onchange="validateDates()">
                        <div id="dateError" class="text-danger" style="display:none; font-size: 0.8rem;">结束日期不能早于开始日期</div>
                    </div>
                </div>
                
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100" id="filterBtn">
                        <i class="bi bi-filter"></i> 应用筛选
                    </button>
                </div>
                
                <div class="col-md-2 d-flex align-items-end">
                    <a href="@Url.Action(Model.CategoryId > 0 ? "ByCategory" : "Index", "News", Model.CategoryId > 0 ? new { categoryId = Model.CategoryId } : null)" class="btn btn-outline-secondary w-100">
                        <i class="bi bi-arrow-counterclockwise"></i> 重置筛选
                    </a>
                </div>
                
                <input type="hidden" name="page" value="1" />
                <input type="hidden" name="sort" value="@Model.SortOption.ToString().ToLower()" />
            </form>
        </div>
    </div>
</div>

<!-- 排序选项卡 -->
<div class="mb-4">
    <ul class="nav nav-tabs">
        @{
            var routeValues = !string.IsNullOrEmpty(Model.CategoryName) 
                ? new Dictionary<string, object> { ["categoryId"] = Model.CategoryId, ["page"] = 1 } 
                : new Dictionary<string, object> { ["page"] = 1 };
                
            // 添加其他筛选参数
            if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                routeValues["searchTerm"] = Model.SearchTerm;
            }
            if (Model.DateFrom.HasValue)
            {
                routeValues["dateFrom"] = Model.DateFrom.Value.ToString("yyyy-MM-dd");
            }
            if (Model.DateTo.HasValue)
            {
                routeValues["dateTo"] = Model.DateTo.Value.ToString("yyyy-MM-dd");
            }
            
            var action = !string.IsNullOrEmpty(Model.CategoryName) ? "ByCategory" : "Index";
        }
        
        <li class="nav-item">
            <a class="nav-link @(Model.SortOption == NewsSortOption.Comprehensive ? "active" : "")" 
               href="@Url.Action(action, "News", new Dictionary<string, object>(routeValues) { ["sort"] = "comprehensive" })"
               style="@(Model.SortOption != NewsSortOption.Comprehensive ? "color: #455148; font-weight: 600;" : "")">
                <i class="bi bi-bar-chart"></i> 综合
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Model.SortOption == NewsSortOption.TimeDesc ? "active" : "")" 
               href="@Url.Action(action, "News", new Dictionary<string, object>(routeValues) { ["sort"] = "timedesc" })"
               style="@(Model.SortOption != NewsSortOption.TimeDesc ? "color: #455148; font-weight: 600;" : "")">
                <i class="bi bi-arrow-down"></i> 最新
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link @(Model.SortOption == NewsSortOption.TimeAsc ? "active" : "")" 
               href="@Url.Action(action, "News", new Dictionary<string, object>(routeValues) { ["sort"] = "timeasc" })"
               style="@(Model.SortOption != NewsSortOption.TimeAsc ? "color: #455148; font-weight: 600;" : "")">
                <i class="bi bi-arrow-up"></i> 最早
            </a>
        </li>
    </ul>
</div>

@if (Model.News == null || !Model.News.Any())
{
    <div class="alert alert-info">
        @if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.FilterCategoryId.HasValue || Model.DateFrom.HasValue || Model.DateTo.HasValue)
        {
            <i class="bi bi-info-circle"></i> <span>没有找到符合条件的新闻内容，请尝试调整搜索条件。</span>
        }
        else if (!string.IsNullOrEmpty(Model.CategoryName))
        {
            <p>该分类下暂无新闻。</p>
        }
        else
        {
            <p>暂无新闻内容，请稍后再来。</p>
        }
    </div>
}
else
{
    <!-- 结果统计 -->
    @if (!string.IsNullOrEmpty(Model.SearchTerm) || Model.FilterCategoryId.HasValue || Model.DateFrom.HasValue || Model.DateTo.HasValue)
    {
        <div class="mb-3">
            <p class="text-muted">找到 @Model.TotalItems 条结果 - 当前显示第 @Model.CurrentPage 页 / 共 @Model.TotalPages 页</p>
        </div>
    }
    
    <div class="list-group">
        @foreach (var news in Model.News)
        {
            <a href="@Url.Action("Details", "News", new { id = news.Id })" class="list-group-item list-group-item-action" target="_blank">
                <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">@news.Title</h5>
                    <small>@news.CreatedAt.ToString("yyyy-MM-dd")</small>
                </div>
                <p class="mb-1 text-truncate">@news.Content</p>
                <div class="d-flex justify-content-between align-items-center">
                    <small class="text-muted">分类: @news.CategoryName</small>
                    <small class="text-muted"><i class="bi bi-eye"></i> @news.ClickCount</small>
                </div>
            </a>
        }
    </div>
    
    <!-- 分页控件 -->
    @if (Model.TotalPages > 1)
    {
        <div class="mt-4">
            <nav aria-label="新闻分页">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        @{
                            var prevPageRouteValues = new Dictionary<string, object> { ["page"] = Model.CurrentPage - 1, ["sort"] = Model.SortOption.ToString().ToLower() };
                            if (!string.IsNullOrEmpty(Model.CategoryName))
                            {
                                prevPageRouteValues["categoryId"] = Model.CategoryId;
                            }
                            // 添加其他筛选参数
                            if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                prevPageRouteValues["searchTerm"] = Model.SearchTerm;
                            }
                            if (Model.DateFrom.HasValue)
                            {
                                prevPageRouteValues["dateFrom"] = Model.DateFrom.Value.ToString("yyyy-MM-dd");
                            }
                            if (Model.DateTo.HasValue)
                            {
                                prevPageRouteValues["dateTo"] = Model.DateTo.Value.ToString("yyyy-MM-dd");
                            }
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.CategoryName))
                        {
                            <a class="page-link" href="@Url.Action("ByCategory", "News", prevPageRouteValues)" aria-label="上一页">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">上一页</span>
                            </a>
                        }
                        else
                        {
                            <a class="page-link" href="@Url.Action("Index", "News", prevPageRouteValues)" aria-label="上一页">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">上一页</span>
                            </a>
                        }
                    </li>
                    
                    @{
                        // 显示页码范围，最多显示5个页码
                        int startPage = Math.Max(1, Model.CurrentPage - 2);
                        int endPage = Math.Min(Model.TotalPages, startPage + 4);
                        
                        // 如果当前接近尾页，调整起始页
                        if (endPage - startPage < 4 && startPage > 1)
                        {
                            startPage = Math.Max(1, endPage - 4);
                        }
                    }
                    
                    @if (startPage > 1)
                    {
                        var firstPageRouteValues = new Dictionary<string, object> { ["page"] = 1, ["sort"] = Model.SortOption.ToString().ToLower() };
                        if (!string.IsNullOrEmpty(Model.CategoryName))
                        {
                            firstPageRouteValues["categoryId"] = Model.CategoryId;
                        }
                        // 添加其他筛选参数
                        if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            firstPageRouteValues["searchTerm"] = Model.SearchTerm;
                        }
                        if (Model.DateFrom.HasValue)
                        {
                            firstPageRouteValues["dateFrom"] = Model.DateFrom.Value.ToString("yyyy-MM-dd");
                        }
                        if (Model.DateTo.HasValue)
                        {
                            firstPageRouteValues["dateTo"] = Model.DateTo.Value.ToString("yyyy-MM-dd");
                        }
                        
                        <li class="page-item">
                            @if (!string.IsNullOrEmpty(Model.CategoryName))
                            {
                                <a class="page-link" href="@Url.Action("ByCategory", "News", firstPageRouteValues)">1</a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", "News", firstPageRouteValues)">1</a>
                            }
                        </li>
                        @if (startPage > 2)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }
                    }
                    
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        var pageRouteValues = new Dictionary<string, object> { ["page"] = i, ["sort"] = Model.SortOption.ToString().ToLower() };
                        if (!string.IsNullOrEmpty(Model.CategoryName))
                        {
                            pageRouteValues["categoryId"] = Model.CategoryId;
                        }
                        // 添加其他筛选参数
                        if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            pageRouteValues["searchTerm"] = Model.SearchTerm;
                        }
                        if (Model.DateFrom.HasValue)
                        {
                            pageRouteValues["dateFrom"] = Model.DateFrom.Value.ToString("yyyy-MM-dd");
                        }
                        if (Model.DateTo.HasValue)
                        {
                            pageRouteValues["dateTo"] = Model.DateTo.Value.ToString("yyyy-MM-dd");
                        }
                        
                        <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                            @if (!string.IsNullOrEmpty(Model.CategoryName))
                            {
                                <a class="page-link" href="@Url.Action("ByCategory", "News", pageRouteValues)">@i</a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", "News", pageRouteValues)">@i</a>
                            }
                        </li>
                    }
                    
                    @if (endPage < Model.TotalPages)
                    {
                        var lastPageRouteValues = new Dictionary<string, object> { ["page"] = Model.TotalPages, ["sort"] = Model.SortOption.ToString().ToLower() };
                        if (!string.IsNullOrEmpty(Model.CategoryName))
                        {
                            lastPageRouteValues["categoryId"] = Model.CategoryId;
                        }
                        // 添加其他筛选参数
                        if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            lastPageRouteValues["searchTerm"] = Model.SearchTerm;
                        }
                        if (Model.DateFrom.HasValue)
                        {
                            lastPageRouteValues["dateFrom"] = Model.DateFrom.Value.ToString("yyyy-MM-dd");
                        }
                        if (Model.DateTo.HasValue)
                        {
                            lastPageRouteValues["dateTo"] = Model.DateTo.Value.ToString("yyyy-MM-dd");
                        }
                        
                        @if (endPage < Model.TotalPages - 1)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                            }
                        <li class="page-item">
                            @if (!string.IsNullOrEmpty(Model.CategoryName))
                            {
                                <a class="page-link" href="@Url.Action("ByCategory", "News", lastPageRouteValues)">@Model.TotalPages</a>
                            }
                            else
                            {
                                <a class="page-link" href="@Url.Action("Index", "News", lastPageRouteValues)">@Model.TotalPages</a>
                            }
                        </li>
                    }
                    
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        @{
                            var nextPageRouteValues = new Dictionary<string, object> { ["page"] = Model.CurrentPage + 1, ["sort"] = Model.SortOption.ToString().ToLower() };
                            if (!string.IsNullOrEmpty(Model.CategoryName))
                            {
                                nextPageRouteValues["categoryId"] = Model.CategoryId;
                            }
                            // 添加其他筛选参数
                            if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                nextPageRouteValues["searchTerm"] = Model.SearchTerm;
                            }
                            if (Model.DateFrom.HasValue)
                            {
                                nextPageRouteValues["dateFrom"] = Model.DateFrom.Value.ToString("yyyy-MM-dd");
                            }
                            if (Model.DateTo.HasValue)
                            {
                                nextPageRouteValues["dateTo"] = Model.DateTo.Value.ToString("yyyy-MM-dd");
                            }
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.CategoryName))
                        {
                            <a class="page-link" href="@Url.Action("ByCategory", "News", nextPageRouteValues)" aria-label="下一页">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">下一页</span>
                            </a>
                        }
                        else
                        {
                            <a class="page-link" href="@Url.Action("Index", "News", nextPageRouteValues)" aria-label="下一页">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">下一页</span>
                            </a>
                        }
                    </li>
                </ul>
            </nav>
        </div>
    }
}

@section Scripts {
    <script>
        // 验证日期函数
        function validateDates() {
            const dateFromInput = document.getElementById('dateFrom');
            const dateToInput = document.getElementById('dateTo');
            const filterBtn = document.getElementById('filterBtn');
            const dateError = document.getElementById('dateError');
            
            // 如果两个日期都有值
            if (dateFromInput.value && dateToInput.value) {
                const dateFrom = new Date(dateFromInput.value);
                const dateTo = new Date(dateToInput.value);
                
                // 检查结束日期是否早于开始日期
                if (dateTo < dateFrom) {
                    dateError.style.display = 'block';
                    filterBtn.disabled = true;
                    return false;
                } else {
                    dateError.style.display = 'none';
                    filterBtn.disabled = false;
                    return true;
                }
            } else {
                // 如果任一日期为空，则不显示错误
                dateError.style.display = 'none';
                filterBtn.disabled = false;
                return true;
            }
        }
        
        // 页面加载时验证一次日期
        document.addEventListener('DOMContentLoaded', function() {
            validateDates();
            
            // 表单提交前验证
            document.querySelector('form').addEventListener('submit', function(event) {
                if (!validateDates()) {
                    event.preventDefault();
                }
            });
        });
    </script>
} 